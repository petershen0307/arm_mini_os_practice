# Makefile.in generated by automake 1.10.1 from Makefile.am.
# device/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# top level directory for RTEMS build tree
#


pkgdatadir = $(datadir)/skyeye
pkglibdir = $(libdir)/skyeye
pkgincludedir = $(includedir)/skyeye
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
#am__append_1 = $(dev_lcd)
#am__append_2 = 
##am__append_3 = lcd/skyeye_lcd_gtk.c
##am__append_4 = lcd/skyeye_lcd_win32.c
subdir = device
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libdev_a_AR = $(AR) $(ARFLAGS)
libdev_a_LIBADD =
am__libdev_a_SOURCES_DIST = skyeye_device.c uart/skyeye_uart.c \
	uart/skyeye_uart_net.c uart/skyeye_uart_stdio.c \
	uart/skyeye_uart_cvt_dcc.c uart/skyeye_uart_pipe.c \
	flash/armflash.c flash/dev_flash_sst39lvf160.c \
	flash/dev_flash_am29.c flash/dev_flash_intel.c \
	flash/skyeye_flash.c nandflash/dev_nandflash_s3c2410.c \
	nandflash/nandflash_smallblock.c nandflash/skyeye_nandflash.c \
	sound/dev_sound_s3c44b0x.c sound/skyeye_sound.c \
	sound/skyeye_sound_pcm.c net/dev_net_cs8900a.c \
	net/dev_net_s3c4510b.c net/skyeye_net_tuntap.c \
	net/dev_net_rtl8019.c net/skyeye_net.c net/skyeye_net_vnet.c \
	touchscreen/dev_touchscreen_skyeye.c \
	touchscreen/skyeye_touchscreen.c lcd/dev_lcd_au1100.c \
	lcd/dev_lcd_s3c2410.c lcd/skyeye_lcd.c lcd/dev_lcd_ep7312.c \
	lcd/dev_lcd_s3c44b0x.c lcd/dev_lcd_pxa.c lcd/skyeye_lcd_gtk.c \
	lcd/skyeye_lcd_win32.c
am__objects_1 = skyeye_uart.$(OBJEXT) skyeye_uart_net.$(OBJEXT) \
	skyeye_uart_stdio.$(OBJEXT) skyeye_uart_cvt_dcc.$(OBJEXT) \
	skyeye_uart_pipe.$(OBJEXT)
am__objects_2 = armflash.$(OBJEXT) dev_flash_sst39lvf160.$(OBJEXT) \
	dev_flash_am29.$(OBJEXT) dev_flash_intel.$(OBJEXT) \
	skyeye_flash.$(OBJEXT)
am__objects_3 = dev_nandflash_s3c2410.$(OBJEXT) \
	nandflash_smallblock.$(OBJEXT) skyeye_nandflash.$(OBJEXT)
am__objects_4 = dev_sound_s3c44b0x.$(OBJEXT) skyeye_sound.$(OBJEXT) \
	skyeye_sound_pcm.$(OBJEXT)
am__objects_5 = dev_net_cs8900a.$(OBJEXT) dev_net_s3c4510b.$(OBJEXT) \
	skyeye_net_tuntap.$(OBJEXT) dev_net_rtl8019.$(OBJEXT) \
	skyeye_net.$(OBJEXT) skyeye_net_vnet.$(OBJEXT)
am__objects_6 = dev_touchscreen_skyeye.$(OBJEXT) \
	skyeye_touchscreen.$(OBJEXT)
am__objects_7 = dev_lcd_au1100.$(OBJEXT) dev_lcd_s3c2410.$(OBJEXT) \
	skyeye_lcd.$(OBJEXT) dev_lcd_ep7312.$(OBJEXT) \
	dev_lcd_s3c44b0x.$(OBJEXT) dev_lcd_pxa.$(OBJEXT)
#am__objects_8 = $(am__objects_7)
##am__objects_9 = skyeye_lcd_gtk.$(OBJEXT)
##am__objects_10 = skyeye_lcd_win32.$(OBJEXT)
am_libdev_a_OBJECTS = skyeye_device.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10)
libdev_a_OBJECTS = $(am_libdev_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdev_a_SOURCES)
DIST_SOURCES = $(am__libdev_a_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/peter/code/arm/skyeye-1.2.6_rc1/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/peter/code/arm/skyeye-1.2.6_rc1/missing --run tar
AUTOCONF = ${SHELL} /home/peter/code/arm/skyeye-1.2.6_rc1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/peter/code/arm/skyeye-1.2.6_rc1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/peter/code/arm/skyeye-1.2.6_rc1/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
COMMON_INCLUDES = -I$(top_srcdir)/utils/config -I$(top_srcdir)/utils/main -I$(top_srcdir)/utils/main -I$(top_srcdir)/utils -I$(top_srcdir)/device
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DMODET -g -O2 -D_FILE_OFFSET_BITS=64 -DSTANDALONE -DDEFAULT_INLINE=0 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
GTK_CFLAGS = 
GTK_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCD_CFLAGS = 
LCD_LIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS = -lm -lc 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/peter/code/arm/skyeye-1.2.6_rc1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = skyeye
PACKAGE_BUGREPORT = skyeye-developer@lists.gro.clinux.org
PACKAGE_NAME = SkyEye
PACKAGE_STRING = SkyEye 1.2.6
PACKAGE_TARNAME = skyeye
PACKAGE_VERSION = 1.2.6
PATH_SEPARATOR = :
PKG_CONFIG = no
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.2.6
abs_builddir = /home/peter/code/arm/skyeye-1.2.6_rc1/device
abs_srcdir = /home/peter/code/arm/skyeye-1.2.6_rc1/device
abs_top_builddir = /home/peter/code/arm/skyeye-1.2.6_rc1
abs_top_srcdir = /home/peter/code/arm/skyeye-1.2.6_rc1
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/peter/code/arm/skyeye-1.2.6_rc1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_builddir = ..
top_srcdir = ..
INCLUDES = -I./ -I$(top_srcdir)/arch/arm \
	-I$(top_srcdir)/arch/arm/common -I$(top_srcdir)/utils/config -I$(top_srcdir)/utils/main -I$(top_srcdir)/utils/main -I$(top_srcdir)/utils -I$(top_srcdir)/device \
	$(am__append_2)
dev_uart = uart/skyeye_uart.c          uart/skyeye_uart_net.c   uart/skyeye_uart_stdio.c \
uart/skyeye_uart_cvt_dcc.c  uart/skyeye_uart_pipe.c

dev_flash = flash/armflash.c  flash/dev_flash_sst39lvf160.c \
flash/dev_flash_am29.c  flash/dev_flash_intel.c  flash/skyeye_flash.c

dev_nandflash = nandflash/dev_nandflash_s3c2410.c  nandflash/nandflash_smallblock.c  nandflash/skyeye_nandflash.c
dev_sound = sound/dev_sound_s3c44b0x.c  sound/skyeye_sound.c  sound/skyeye_sound_pcm.c
dev_lcd = lcd/dev_lcd_au1100.c  lcd/dev_lcd_s3c2410.c   lcd/skyeye_lcd.c \
lcd/dev_lcd_ep7312.c  lcd/dev_lcd_s3c44b0x.c lcd/dev_lcd_pxa.c

dev_net = net/dev_net_cs8900a.c  net/dev_net_s3c4510b.c net/skyeye_net_tuntap.c \
net/dev_net_rtl8019.c  net/skyeye_net.c    net/skyeye_net_vnet.c

dev_ts = touchscreen/dev_touchscreen_skyeye.c  touchscreen/skyeye_touchscreen.c
libdev_a_SOURCES = skyeye_device.c $(dev_uart) $(dev_flash) \
	$(dev_nandflash) $(dev_sound) $(dev_net) $(dev_ts) \
	$(am__append_1) $(am__append_3) $(am__append_4)
noinst_LIBRARIES = libdev.a
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  device/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  device/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libdev.a: $(libdev_a_OBJECTS) $(libdev_a_DEPENDENCIES) 
	-rm -f libdev.a
	$(libdev_a_AR) libdev.a $(libdev_a_OBJECTS) $(libdev_a_LIBADD)
	$(RANLIB) libdev.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/armflash.Po
include ./$(DEPDIR)/dev_flash_am29.Po
include ./$(DEPDIR)/dev_flash_intel.Po
include ./$(DEPDIR)/dev_flash_sst39lvf160.Po
include ./$(DEPDIR)/dev_lcd_au1100.Po
include ./$(DEPDIR)/dev_lcd_ep7312.Po
include ./$(DEPDIR)/dev_lcd_pxa.Po
include ./$(DEPDIR)/dev_lcd_s3c2410.Po
include ./$(DEPDIR)/dev_lcd_s3c44b0x.Po
include ./$(DEPDIR)/dev_nandflash_s3c2410.Po
include ./$(DEPDIR)/dev_net_cs8900a.Po
include ./$(DEPDIR)/dev_net_rtl8019.Po
include ./$(DEPDIR)/dev_net_s3c4510b.Po
include ./$(DEPDIR)/dev_sound_s3c44b0x.Po
include ./$(DEPDIR)/dev_touchscreen_skyeye.Po
include ./$(DEPDIR)/nandflash_smallblock.Po
include ./$(DEPDIR)/skyeye_device.Po
include ./$(DEPDIR)/skyeye_flash.Po
include ./$(DEPDIR)/skyeye_lcd.Po
include ./$(DEPDIR)/skyeye_lcd_gtk.Po
include ./$(DEPDIR)/skyeye_lcd_win32.Po
include ./$(DEPDIR)/skyeye_nandflash.Po
include ./$(DEPDIR)/skyeye_net.Po
include ./$(DEPDIR)/skyeye_net_tuntap.Po
include ./$(DEPDIR)/skyeye_net_vnet.Po
include ./$(DEPDIR)/skyeye_sound.Po
include ./$(DEPDIR)/skyeye_sound_pcm.Po
include ./$(DEPDIR)/skyeye_touchscreen.Po
include ./$(DEPDIR)/skyeye_uart.Po
include ./$(DEPDIR)/skyeye_uart_cvt_dcc.Po
include ./$(DEPDIR)/skyeye_uart_net.Po
include ./$(DEPDIR)/skyeye_uart_pipe.Po
include ./$(DEPDIR)/skyeye_uart_stdio.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

skyeye_uart.o: uart/skyeye_uart.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart.o -MD -MP -MF $(DEPDIR)/skyeye_uart.Tpo -c -o skyeye_uart.o `test -f 'uart/skyeye_uart.c' || echo '$(srcdir)/'`uart/skyeye_uart.c
	mv -f $(DEPDIR)/skyeye_uart.Tpo $(DEPDIR)/skyeye_uart.Po
#	source='uart/skyeye_uart.c' object='skyeye_uart.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart.o `test -f 'uart/skyeye_uart.c' || echo '$(srcdir)/'`uart/skyeye_uart.c

skyeye_uart.obj: uart/skyeye_uart.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart.obj -MD -MP -MF $(DEPDIR)/skyeye_uart.Tpo -c -o skyeye_uart.obj `if test -f 'uart/skyeye_uart.c'; then $(CYGPATH_W) 'uart/skyeye_uart.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart.c'; fi`
	mv -f $(DEPDIR)/skyeye_uart.Tpo $(DEPDIR)/skyeye_uart.Po
#	source='uart/skyeye_uart.c' object='skyeye_uart.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart.obj `if test -f 'uart/skyeye_uart.c'; then $(CYGPATH_W) 'uart/skyeye_uart.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart.c'; fi`

skyeye_uart_net.o: uart/skyeye_uart_net.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_net.o -MD -MP -MF $(DEPDIR)/skyeye_uart_net.Tpo -c -o skyeye_uart_net.o `test -f 'uart/skyeye_uart_net.c' || echo '$(srcdir)/'`uart/skyeye_uart_net.c
	mv -f $(DEPDIR)/skyeye_uart_net.Tpo $(DEPDIR)/skyeye_uart_net.Po
#	source='uart/skyeye_uart_net.c' object='skyeye_uart_net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_net.o `test -f 'uart/skyeye_uart_net.c' || echo '$(srcdir)/'`uart/skyeye_uart_net.c

skyeye_uart_net.obj: uart/skyeye_uart_net.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_net.obj -MD -MP -MF $(DEPDIR)/skyeye_uart_net.Tpo -c -o skyeye_uart_net.obj `if test -f 'uart/skyeye_uart_net.c'; then $(CYGPATH_W) 'uart/skyeye_uart_net.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_net.c'; fi`
	mv -f $(DEPDIR)/skyeye_uart_net.Tpo $(DEPDIR)/skyeye_uart_net.Po
#	source='uart/skyeye_uart_net.c' object='skyeye_uart_net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_net.obj `if test -f 'uart/skyeye_uart_net.c'; then $(CYGPATH_W) 'uart/skyeye_uart_net.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_net.c'; fi`

skyeye_uart_stdio.o: uart/skyeye_uart_stdio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_stdio.o -MD -MP -MF $(DEPDIR)/skyeye_uart_stdio.Tpo -c -o skyeye_uart_stdio.o `test -f 'uart/skyeye_uart_stdio.c' || echo '$(srcdir)/'`uart/skyeye_uart_stdio.c
	mv -f $(DEPDIR)/skyeye_uart_stdio.Tpo $(DEPDIR)/skyeye_uart_stdio.Po
#	source='uart/skyeye_uart_stdio.c' object='skyeye_uart_stdio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_stdio.o `test -f 'uart/skyeye_uart_stdio.c' || echo '$(srcdir)/'`uart/skyeye_uart_stdio.c

skyeye_uart_stdio.obj: uart/skyeye_uart_stdio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_stdio.obj -MD -MP -MF $(DEPDIR)/skyeye_uart_stdio.Tpo -c -o skyeye_uart_stdio.obj `if test -f 'uart/skyeye_uart_stdio.c'; then $(CYGPATH_W) 'uart/skyeye_uart_stdio.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_stdio.c'; fi`
	mv -f $(DEPDIR)/skyeye_uart_stdio.Tpo $(DEPDIR)/skyeye_uart_stdio.Po
#	source='uart/skyeye_uart_stdio.c' object='skyeye_uart_stdio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_stdio.obj `if test -f 'uart/skyeye_uart_stdio.c'; then $(CYGPATH_W) 'uart/skyeye_uart_stdio.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_stdio.c'; fi`

skyeye_uart_cvt_dcc.o: uart/skyeye_uart_cvt_dcc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_cvt_dcc.o -MD -MP -MF $(DEPDIR)/skyeye_uart_cvt_dcc.Tpo -c -o skyeye_uart_cvt_dcc.o `test -f 'uart/skyeye_uart_cvt_dcc.c' || echo '$(srcdir)/'`uart/skyeye_uart_cvt_dcc.c
	mv -f $(DEPDIR)/skyeye_uart_cvt_dcc.Tpo $(DEPDIR)/skyeye_uart_cvt_dcc.Po
#	source='uart/skyeye_uart_cvt_dcc.c' object='skyeye_uart_cvt_dcc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_cvt_dcc.o `test -f 'uart/skyeye_uart_cvt_dcc.c' || echo '$(srcdir)/'`uart/skyeye_uart_cvt_dcc.c

skyeye_uart_cvt_dcc.obj: uart/skyeye_uart_cvt_dcc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_cvt_dcc.obj -MD -MP -MF $(DEPDIR)/skyeye_uart_cvt_dcc.Tpo -c -o skyeye_uart_cvt_dcc.obj `if test -f 'uart/skyeye_uart_cvt_dcc.c'; then $(CYGPATH_W) 'uart/skyeye_uart_cvt_dcc.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_cvt_dcc.c'; fi`
	mv -f $(DEPDIR)/skyeye_uart_cvt_dcc.Tpo $(DEPDIR)/skyeye_uart_cvt_dcc.Po
#	source='uart/skyeye_uart_cvt_dcc.c' object='skyeye_uart_cvt_dcc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_cvt_dcc.obj `if test -f 'uart/skyeye_uart_cvt_dcc.c'; then $(CYGPATH_W) 'uart/skyeye_uart_cvt_dcc.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_cvt_dcc.c'; fi`

skyeye_uart_pipe.o: uart/skyeye_uart_pipe.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_pipe.o -MD -MP -MF $(DEPDIR)/skyeye_uart_pipe.Tpo -c -o skyeye_uart_pipe.o `test -f 'uart/skyeye_uart_pipe.c' || echo '$(srcdir)/'`uart/skyeye_uart_pipe.c
	mv -f $(DEPDIR)/skyeye_uart_pipe.Tpo $(DEPDIR)/skyeye_uart_pipe.Po
#	source='uart/skyeye_uart_pipe.c' object='skyeye_uart_pipe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_pipe.o `test -f 'uart/skyeye_uart_pipe.c' || echo '$(srcdir)/'`uart/skyeye_uart_pipe.c

skyeye_uart_pipe.obj: uart/skyeye_uart_pipe.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_uart_pipe.obj -MD -MP -MF $(DEPDIR)/skyeye_uart_pipe.Tpo -c -o skyeye_uart_pipe.obj `if test -f 'uart/skyeye_uart_pipe.c'; then $(CYGPATH_W) 'uart/skyeye_uart_pipe.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_pipe.c'; fi`
	mv -f $(DEPDIR)/skyeye_uart_pipe.Tpo $(DEPDIR)/skyeye_uart_pipe.Po
#	source='uart/skyeye_uart_pipe.c' object='skyeye_uart_pipe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_uart_pipe.obj `if test -f 'uart/skyeye_uart_pipe.c'; then $(CYGPATH_W) 'uart/skyeye_uart_pipe.c'; else $(CYGPATH_W) '$(srcdir)/uart/skyeye_uart_pipe.c'; fi`

armflash.o: flash/armflash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armflash.o -MD -MP -MF $(DEPDIR)/armflash.Tpo -c -o armflash.o `test -f 'flash/armflash.c' || echo '$(srcdir)/'`flash/armflash.c
	mv -f $(DEPDIR)/armflash.Tpo $(DEPDIR)/armflash.Po
#	source='flash/armflash.c' object='armflash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armflash.o `test -f 'flash/armflash.c' || echo '$(srcdir)/'`flash/armflash.c

armflash.obj: flash/armflash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armflash.obj -MD -MP -MF $(DEPDIR)/armflash.Tpo -c -o armflash.obj `if test -f 'flash/armflash.c'; then $(CYGPATH_W) 'flash/armflash.c'; else $(CYGPATH_W) '$(srcdir)/flash/armflash.c'; fi`
	mv -f $(DEPDIR)/armflash.Tpo $(DEPDIR)/armflash.Po
#	source='flash/armflash.c' object='armflash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armflash.obj `if test -f 'flash/armflash.c'; then $(CYGPATH_W) 'flash/armflash.c'; else $(CYGPATH_W) '$(srcdir)/flash/armflash.c'; fi`

dev_flash_sst39lvf160.o: flash/dev_flash_sst39lvf160.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_flash_sst39lvf160.o -MD -MP -MF $(DEPDIR)/dev_flash_sst39lvf160.Tpo -c -o dev_flash_sst39lvf160.o `test -f 'flash/dev_flash_sst39lvf160.c' || echo '$(srcdir)/'`flash/dev_flash_sst39lvf160.c
	mv -f $(DEPDIR)/dev_flash_sst39lvf160.Tpo $(DEPDIR)/dev_flash_sst39lvf160.Po
#	source='flash/dev_flash_sst39lvf160.c' object='dev_flash_sst39lvf160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_flash_sst39lvf160.o `test -f 'flash/dev_flash_sst39lvf160.c' || echo '$(srcdir)/'`flash/dev_flash_sst39lvf160.c

dev_flash_sst39lvf160.obj: flash/dev_flash_sst39lvf160.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_flash_sst39lvf160.obj -MD -MP -MF $(DEPDIR)/dev_flash_sst39lvf160.Tpo -c -o dev_flash_sst39lvf160.obj `if test -f 'flash/dev_flash_sst39lvf160.c'; then $(CYGPATH_W) 'flash/dev_flash_sst39lvf160.c'; else $(CYGPATH_W) '$(srcdir)/flash/dev_flash_sst39lvf160.c'; fi`
	mv -f $(DEPDIR)/dev_flash_sst39lvf160.Tpo $(DEPDIR)/dev_flash_sst39lvf160.Po
#	source='flash/dev_flash_sst39lvf160.c' object='dev_flash_sst39lvf160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_flash_sst39lvf160.obj `if test -f 'flash/dev_flash_sst39lvf160.c'; then $(CYGPATH_W) 'flash/dev_flash_sst39lvf160.c'; else $(CYGPATH_W) '$(srcdir)/flash/dev_flash_sst39lvf160.c'; fi`

dev_flash_am29.o: flash/dev_flash_am29.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_flash_am29.o -MD -MP -MF $(DEPDIR)/dev_flash_am29.Tpo -c -o dev_flash_am29.o `test -f 'flash/dev_flash_am29.c' || echo '$(srcdir)/'`flash/dev_flash_am29.c
	mv -f $(DEPDIR)/dev_flash_am29.Tpo $(DEPDIR)/dev_flash_am29.Po
#	source='flash/dev_flash_am29.c' object='dev_flash_am29.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_flash_am29.o `test -f 'flash/dev_flash_am29.c' || echo '$(srcdir)/'`flash/dev_flash_am29.c

dev_flash_am29.obj: flash/dev_flash_am29.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_flash_am29.obj -MD -MP -MF $(DEPDIR)/dev_flash_am29.Tpo -c -o dev_flash_am29.obj `if test -f 'flash/dev_flash_am29.c'; then $(CYGPATH_W) 'flash/dev_flash_am29.c'; else $(CYGPATH_W) '$(srcdir)/flash/dev_flash_am29.c'; fi`
	mv -f $(DEPDIR)/dev_flash_am29.Tpo $(DEPDIR)/dev_flash_am29.Po
#	source='flash/dev_flash_am29.c' object='dev_flash_am29.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_flash_am29.obj `if test -f 'flash/dev_flash_am29.c'; then $(CYGPATH_W) 'flash/dev_flash_am29.c'; else $(CYGPATH_W) '$(srcdir)/flash/dev_flash_am29.c'; fi`

dev_flash_intel.o: flash/dev_flash_intel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_flash_intel.o -MD -MP -MF $(DEPDIR)/dev_flash_intel.Tpo -c -o dev_flash_intel.o `test -f 'flash/dev_flash_intel.c' || echo '$(srcdir)/'`flash/dev_flash_intel.c
	mv -f $(DEPDIR)/dev_flash_intel.Tpo $(DEPDIR)/dev_flash_intel.Po
#	source='flash/dev_flash_intel.c' object='dev_flash_intel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_flash_intel.o `test -f 'flash/dev_flash_intel.c' || echo '$(srcdir)/'`flash/dev_flash_intel.c

dev_flash_intel.obj: flash/dev_flash_intel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_flash_intel.obj -MD -MP -MF $(DEPDIR)/dev_flash_intel.Tpo -c -o dev_flash_intel.obj `if test -f 'flash/dev_flash_intel.c'; then $(CYGPATH_W) 'flash/dev_flash_intel.c'; else $(CYGPATH_W) '$(srcdir)/flash/dev_flash_intel.c'; fi`
	mv -f $(DEPDIR)/dev_flash_intel.Tpo $(DEPDIR)/dev_flash_intel.Po
#	source='flash/dev_flash_intel.c' object='dev_flash_intel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_flash_intel.obj `if test -f 'flash/dev_flash_intel.c'; then $(CYGPATH_W) 'flash/dev_flash_intel.c'; else $(CYGPATH_W) '$(srcdir)/flash/dev_flash_intel.c'; fi`

skyeye_flash.o: flash/skyeye_flash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_flash.o -MD -MP -MF $(DEPDIR)/skyeye_flash.Tpo -c -o skyeye_flash.o `test -f 'flash/skyeye_flash.c' || echo '$(srcdir)/'`flash/skyeye_flash.c
	mv -f $(DEPDIR)/skyeye_flash.Tpo $(DEPDIR)/skyeye_flash.Po
#	source='flash/skyeye_flash.c' object='skyeye_flash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_flash.o `test -f 'flash/skyeye_flash.c' || echo '$(srcdir)/'`flash/skyeye_flash.c

skyeye_flash.obj: flash/skyeye_flash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_flash.obj -MD -MP -MF $(DEPDIR)/skyeye_flash.Tpo -c -o skyeye_flash.obj `if test -f 'flash/skyeye_flash.c'; then $(CYGPATH_W) 'flash/skyeye_flash.c'; else $(CYGPATH_W) '$(srcdir)/flash/skyeye_flash.c'; fi`
	mv -f $(DEPDIR)/skyeye_flash.Tpo $(DEPDIR)/skyeye_flash.Po
#	source='flash/skyeye_flash.c' object='skyeye_flash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_flash.obj `if test -f 'flash/skyeye_flash.c'; then $(CYGPATH_W) 'flash/skyeye_flash.c'; else $(CYGPATH_W) '$(srcdir)/flash/skyeye_flash.c'; fi`

dev_nandflash_s3c2410.o: nandflash/dev_nandflash_s3c2410.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_nandflash_s3c2410.o -MD -MP -MF $(DEPDIR)/dev_nandflash_s3c2410.Tpo -c -o dev_nandflash_s3c2410.o `test -f 'nandflash/dev_nandflash_s3c2410.c' || echo '$(srcdir)/'`nandflash/dev_nandflash_s3c2410.c
	mv -f $(DEPDIR)/dev_nandflash_s3c2410.Tpo $(DEPDIR)/dev_nandflash_s3c2410.Po
#	source='nandflash/dev_nandflash_s3c2410.c' object='dev_nandflash_s3c2410.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_nandflash_s3c2410.o `test -f 'nandflash/dev_nandflash_s3c2410.c' || echo '$(srcdir)/'`nandflash/dev_nandflash_s3c2410.c

dev_nandflash_s3c2410.obj: nandflash/dev_nandflash_s3c2410.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_nandflash_s3c2410.obj -MD -MP -MF $(DEPDIR)/dev_nandflash_s3c2410.Tpo -c -o dev_nandflash_s3c2410.obj `if test -f 'nandflash/dev_nandflash_s3c2410.c'; then $(CYGPATH_W) 'nandflash/dev_nandflash_s3c2410.c'; else $(CYGPATH_W) '$(srcdir)/nandflash/dev_nandflash_s3c2410.c'; fi`
	mv -f $(DEPDIR)/dev_nandflash_s3c2410.Tpo $(DEPDIR)/dev_nandflash_s3c2410.Po
#	source='nandflash/dev_nandflash_s3c2410.c' object='dev_nandflash_s3c2410.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_nandflash_s3c2410.obj `if test -f 'nandflash/dev_nandflash_s3c2410.c'; then $(CYGPATH_W) 'nandflash/dev_nandflash_s3c2410.c'; else $(CYGPATH_W) '$(srcdir)/nandflash/dev_nandflash_s3c2410.c'; fi`

nandflash_smallblock.o: nandflash/nandflash_smallblock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nandflash_smallblock.o -MD -MP -MF $(DEPDIR)/nandflash_smallblock.Tpo -c -o nandflash_smallblock.o `test -f 'nandflash/nandflash_smallblock.c' || echo '$(srcdir)/'`nandflash/nandflash_smallblock.c
	mv -f $(DEPDIR)/nandflash_smallblock.Tpo $(DEPDIR)/nandflash_smallblock.Po
#	source='nandflash/nandflash_smallblock.c' object='nandflash_smallblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nandflash_smallblock.o `test -f 'nandflash/nandflash_smallblock.c' || echo '$(srcdir)/'`nandflash/nandflash_smallblock.c

nandflash_smallblock.obj: nandflash/nandflash_smallblock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nandflash_smallblock.obj -MD -MP -MF $(DEPDIR)/nandflash_smallblock.Tpo -c -o nandflash_smallblock.obj `if test -f 'nandflash/nandflash_smallblock.c'; then $(CYGPATH_W) 'nandflash/nandflash_smallblock.c'; else $(CYGPATH_W) '$(srcdir)/nandflash/nandflash_smallblock.c'; fi`
	mv -f $(DEPDIR)/nandflash_smallblock.Tpo $(DEPDIR)/nandflash_smallblock.Po
#	source='nandflash/nandflash_smallblock.c' object='nandflash_smallblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nandflash_smallblock.obj `if test -f 'nandflash/nandflash_smallblock.c'; then $(CYGPATH_W) 'nandflash/nandflash_smallblock.c'; else $(CYGPATH_W) '$(srcdir)/nandflash/nandflash_smallblock.c'; fi`

skyeye_nandflash.o: nandflash/skyeye_nandflash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_nandflash.o -MD -MP -MF $(DEPDIR)/skyeye_nandflash.Tpo -c -o skyeye_nandflash.o `test -f 'nandflash/skyeye_nandflash.c' || echo '$(srcdir)/'`nandflash/skyeye_nandflash.c
	mv -f $(DEPDIR)/skyeye_nandflash.Tpo $(DEPDIR)/skyeye_nandflash.Po
#	source='nandflash/skyeye_nandflash.c' object='skyeye_nandflash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_nandflash.o `test -f 'nandflash/skyeye_nandflash.c' || echo '$(srcdir)/'`nandflash/skyeye_nandflash.c

skyeye_nandflash.obj: nandflash/skyeye_nandflash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_nandflash.obj -MD -MP -MF $(DEPDIR)/skyeye_nandflash.Tpo -c -o skyeye_nandflash.obj `if test -f 'nandflash/skyeye_nandflash.c'; then $(CYGPATH_W) 'nandflash/skyeye_nandflash.c'; else $(CYGPATH_W) '$(srcdir)/nandflash/skyeye_nandflash.c'; fi`
	mv -f $(DEPDIR)/skyeye_nandflash.Tpo $(DEPDIR)/skyeye_nandflash.Po
#	source='nandflash/skyeye_nandflash.c' object='skyeye_nandflash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_nandflash.obj `if test -f 'nandflash/skyeye_nandflash.c'; then $(CYGPATH_W) 'nandflash/skyeye_nandflash.c'; else $(CYGPATH_W) '$(srcdir)/nandflash/skyeye_nandflash.c'; fi`

dev_sound_s3c44b0x.o: sound/dev_sound_s3c44b0x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_sound_s3c44b0x.o -MD -MP -MF $(DEPDIR)/dev_sound_s3c44b0x.Tpo -c -o dev_sound_s3c44b0x.o `test -f 'sound/dev_sound_s3c44b0x.c' || echo '$(srcdir)/'`sound/dev_sound_s3c44b0x.c
	mv -f $(DEPDIR)/dev_sound_s3c44b0x.Tpo $(DEPDIR)/dev_sound_s3c44b0x.Po
#	source='sound/dev_sound_s3c44b0x.c' object='dev_sound_s3c44b0x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_sound_s3c44b0x.o `test -f 'sound/dev_sound_s3c44b0x.c' || echo '$(srcdir)/'`sound/dev_sound_s3c44b0x.c

dev_sound_s3c44b0x.obj: sound/dev_sound_s3c44b0x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_sound_s3c44b0x.obj -MD -MP -MF $(DEPDIR)/dev_sound_s3c44b0x.Tpo -c -o dev_sound_s3c44b0x.obj `if test -f 'sound/dev_sound_s3c44b0x.c'; then $(CYGPATH_W) 'sound/dev_sound_s3c44b0x.c'; else $(CYGPATH_W) '$(srcdir)/sound/dev_sound_s3c44b0x.c'; fi`
	mv -f $(DEPDIR)/dev_sound_s3c44b0x.Tpo $(DEPDIR)/dev_sound_s3c44b0x.Po
#	source='sound/dev_sound_s3c44b0x.c' object='dev_sound_s3c44b0x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_sound_s3c44b0x.obj `if test -f 'sound/dev_sound_s3c44b0x.c'; then $(CYGPATH_W) 'sound/dev_sound_s3c44b0x.c'; else $(CYGPATH_W) '$(srcdir)/sound/dev_sound_s3c44b0x.c'; fi`

skyeye_sound.o: sound/skyeye_sound.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_sound.o -MD -MP -MF $(DEPDIR)/skyeye_sound.Tpo -c -o skyeye_sound.o `test -f 'sound/skyeye_sound.c' || echo '$(srcdir)/'`sound/skyeye_sound.c
	mv -f $(DEPDIR)/skyeye_sound.Tpo $(DEPDIR)/skyeye_sound.Po
#	source='sound/skyeye_sound.c' object='skyeye_sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_sound.o `test -f 'sound/skyeye_sound.c' || echo '$(srcdir)/'`sound/skyeye_sound.c

skyeye_sound.obj: sound/skyeye_sound.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_sound.obj -MD -MP -MF $(DEPDIR)/skyeye_sound.Tpo -c -o skyeye_sound.obj `if test -f 'sound/skyeye_sound.c'; then $(CYGPATH_W) 'sound/skyeye_sound.c'; else $(CYGPATH_W) '$(srcdir)/sound/skyeye_sound.c'; fi`
	mv -f $(DEPDIR)/skyeye_sound.Tpo $(DEPDIR)/skyeye_sound.Po
#	source='sound/skyeye_sound.c' object='skyeye_sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_sound.obj `if test -f 'sound/skyeye_sound.c'; then $(CYGPATH_W) 'sound/skyeye_sound.c'; else $(CYGPATH_W) '$(srcdir)/sound/skyeye_sound.c'; fi`

skyeye_sound_pcm.o: sound/skyeye_sound_pcm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_sound_pcm.o -MD -MP -MF $(DEPDIR)/skyeye_sound_pcm.Tpo -c -o skyeye_sound_pcm.o `test -f 'sound/skyeye_sound_pcm.c' || echo '$(srcdir)/'`sound/skyeye_sound_pcm.c
	mv -f $(DEPDIR)/skyeye_sound_pcm.Tpo $(DEPDIR)/skyeye_sound_pcm.Po
#	source='sound/skyeye_sound_pcm.c' object='skyeye_sound_pcm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_sound_pcm.o `test -f 'sound/skyeye_sound_pcm.c' || echo '$(srcdir)/'`sound/skyeye_sound_pcm.c

skyeye_sound_pcm.obj: sound/skyeye_sound_pcm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_sound_pcm.obj -MD -MP -MF $(DEPDIR)/skyeye_sound_pcm.Tpo -c -o skyeye_sound_pcm.obj `if test -f 'sound/skyeye_sound_pcm.c'; then $(CYGPATH_W) 'sound/skyeye_sound_pcm.c'; else $(CYGPATH_W) '$(srcdir)/sound/skyeye_sound_pcm.c'; fi`
	mv -f $(DEPDIR)/skyeye_sound_pcm.Tpo $(DEPDIR)/skyeye_sound_pcm.Po
#	source='sound/skyeye_sound_pcm.c' object='skyeye_sound_pcm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_sound_pcm.obj `if test -f 'sound/skyeye_sound_pcm.c'; then $(CYGPATH_W) 'sound/skyeye_sound_pcm.c'; else $(CYGPATH_W) '$(srcdir)/sound/skyeye_sound_pcm.c'; fi`

dev_net_cs8900a.o: net/dev_net_cs8900a.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_net_cs8900a.o -MD -MP -MF $(DEPDIR)/dev_net_cs8900a.Tpo -c -o dev_net_cs8900a.o `test -f 'net/dev_net_cs8900a.c' || echo '$(srcdir)/'`net/dev_net_cs8900a.c
	mv -f $(DEPDIR)/dev_net_cs8900a.Tpo $(DEPDIR)/dev_net_cs8900a.Po
#	source='net/dev_net_cs8900a.c' object='dev_net_cs8900a.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_net_cs8900a.o `test -f 'net/dev_net_cs8900a.c' || echo '$(srcdir)/'`net/dev_net_cs8900a.c

dev_net_cs8900a.obj: net/dev_net_cs8900a.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_net_cs8900a.obj -MD -MP -MF $(DEPDIR)/dev_net_cs8900a.Tpo -c -o dev_net_cs8900a.obj `if test -f 'net/dev_net_cs8900a.c'; then $(CYGPATH_W) 'net/dev_net_cs8900a.c'; else $(CYGPATH_W) '$(srcdir)/net/dev_net_cs8900a.c'; fi`
	mv -f $(DEPDIR)/dev_net_cs8900a.Tpo $(DEPDIR)/dev_net_cs8900a.Po
#	source='net/dev_net_cs8900a.c' object='dev_net_cs8900a.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_net_cs8900a.obj `if test -f 'net/dev_net_cs8900a.c'; then $(CYGPATH_W) 'net/dev_net_cs8900a.c'; else $(CYGPATH_W) '$(srcdir)/net/dev_net_cs8900a.c'; fi`

dev_net_s3c4510b.o: net/dev_net_s3c4510b.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_net_s3c4510b.o -MD -MP -MF $(DEPDIR)/dev_net_s3c4510b.Tpo -c -o dev_net_s3c4510b.o `test -f 'net/dev_net_s3c4510b.c' || echo '$(srcdir)/'`net/dev_net_s3c4510b.c
	mv -f $(DEPDIR)/dev_net_s3c4510b.Tpo $(DEPDIR)/dev_net_s3c4510b.Po
#	source='net/dev_net_s3c4510b.c' object='dev_net_s3c4510b.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_net_s3c4510b.o `test -f 'net/dev_net_s3c4510b.c' || echo '$(srcdir)/'`net/dev_net_s3c4510b.c

dev_net_s3c4510b.obj: net/dev_net_s3c4510b.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_net_s3c4510b.obj -MD -MP -MF $(DEPDIR)/dev_net_s3c4510b.Tpo -c -o dev_net_s3c4510b.obj `if test -f 'net/dev_net_s3c4510b.c'; then $(CYGPATH_W) 'net/dev_net_s3c4510b.c'; else $(CYGPATH_W) '$(srcdir)/net/dev_net_s3c4510b.c'; fi`
	mv -f $(DEPDIR)/dev_net_s3c4510b.Tpo $(DEPDIR)/dev_net_s3c4510b.Po
#	source='net/dev_net_s3c4510b.c' object='dev_net_s3c4510b.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_net_s3c4510b.obj `if test -f 'net/dev_net_s3c4510b.c'; then $(CYGPATH_W) 'net/dev_net_s3c4510b.c'; else $(CYGPATH_W) '$(srcdir)/net/dev_net_s3c4510b.c'; fi`

skyeye_net_tuntap.o: net/skyeye_net_tuntap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_net_tuntap.o -MD -MP -MF $(DEPDIR)/skyeye_net_tuntap.Tpo -c -o skyeye_net_tuntap.o `test -f 'net/skyeye_net_tuntap.c' || echo '$(srcdir)/'`net/skyeye_net_tuntap.c
	mv -f $(DEPDIR)/skyeye_net_tuntap.Tpo $(DEPDIR)/skyeye_net_tuntap.Po
#	source='net/skyeye_net_tuntap.c' object='skyeye_net_tuntap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_net_tuntap.o `test -f 'net/skyeye_net_tuntap.c' || echo '$(srcdir)/'`net/skyeye_net_tuntap.c

skyeye_net_tuntap.obj: net/skyeye_net_tuntap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_net_tuntap.obj -MD -MP -MF $(DEPDIR)/skyeye_net_tuntap.Tpo -c -o skyeye_net_tuntap.obj `if test -f 'net/skyeye_net_tuntap.c'; then $(CYGPATH_W) 'net/skyeye_net_tuntap.c'; else $(CYGPATH_W) '$(srcdir)/net/skyeye_net_tuntap.c'; fi`
	mv -f $(DEPDIR)/skyeye_net_tuntap.Tpo $(DEPDIR)/skyeye_net_tuntap.Po
#	source='net/skyeye_net_tuntap.c' object='skyeye_net_tuntap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_net_tuntap.obj `if test -f 'net/skyeye_net_tuntap.c'; then $(CYGPATH_W) 'net/skyeye_net_tuntap.c'; else $(CYGPATH_W) '$(srcdir)/net/skyeye_net_tuntap.c'; fi`

dev_net_rtl8019.o: net/dev_net_rtl8019.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_net_rtl8019.o -MD -MP -MF $(DEPDIR)/dev_net_rtl8019.Tpo -c -o dev_net_rtl8019.o `test -f 'net/dev_net_rtl8019.c' || echo '$(srcdir)/'`net/dev_net_rtl8019.c
	mv -f $(DEPDIR)/dev_net_rtl8019.Tpo $(DEPDIR)/dev_net_rtl8019.Po
#	source='net/dev_net_rtl8019.c' object='dev_net_rtl8019.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_net_rtl8019.o `test -f 'net/dev_net_rtl8019.c' || echo '$(srcdir)/'`net/dev_net_rtl8019.c

dev_net_rtl8019.obj: net/dev_net_rtl8019.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_net_rtl8019.obj -MD -MP -MF $(DEPDIR)/dev_net_rtl8019.Tpo -c -o dev_net_rtl8019.obj `if test -f 'net/dev_net_rtl8019.c'; then $(CYGPATH_W) 'net/dev_net_rtl8019.c'; else $(CYGPATH_W) '$(srcdir)/net/dev_net_rtl8019.c'; fi`
	mv -f $(DEPDIR)/dev_net_rtl8019.Tpo $(DEPDIR)/dev_net_rtl8019.Po
#	source='net/dev_net_rtl8019.c' object='dev_net_rtl8019.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_net_rtl8019.obj `if test -f 'net/dev_net_rtl8019.c'; then $(CYGPATH_W) 'net/dev_net_rtl8019.c'; else $(CYGPATH_W) '$(srcdir)/net/dev_net_rtl8019.c'; fi`

skyeye_net.o: net/skyeye_net.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_net.o -MD -MP -MF $(DEPDIR)/skyeye_net.Tpo -c -o skyeye_net.o `test -f 'net/skyeye_net.c' || echo '$(srcdir)/'`net/skyeye_net.c
	mv -f $(DEPDIR)/skyeye_net.Tpo $(DEPDIR)/skyeye_net.Po
#	source='net/skyeye_net.c' object='skyeye_net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_net.o `test -f 'net/skyeye_net.c' || echo '$(srcdir)/'`net/skyeye_net.c

skyeye_net.obj: net/skyeye_net.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_net.obj -MD -MP -MF $(DEPDIR)/skyeye_net.Tpo -c -o skyeye_net.obj `if test -f 'net/skyeye_net.c'; then $(CYGPATH_W) 'net/skyeye_net.c'; else $(CYGPATH_W) '$(srcdir)/net/skyeye_net.c'; fi`
	mv -f $(DEPDIR)/skyeye_net.Tpo $(DEPDIR)/skyeye_net.Po
#	source='net/skyeye_net.c' object='skyeye_net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_net.obj `if test -f 'net/skyeye_net.c'; then $(CYGPATH_W) 'net/skyeye_net.c'; else $(CYGPATH_W) '$(srcdir)/net/skyeye_net.c'; fi`

skyeye_net_vnet.o: net/skyeye_net_vnet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_net_vnet.o -MD -MP -MF $(DEPDIR)/skyeye_net_vnet.Tpo -c -o skyeye_net_vnet.o `test -f 'net/skyeye_net_vnet.c' || echo '$(srcdir)/'`net/skyeye_net_vnet.c
	mv -f $(DEPDIR)/skyeye_net_vnet.Tpo $(DEPDIR)/skyeye_net_vnet.Po
#	source='net/skyeye_net_vnet.c' object='skyeye_net_vnet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_net_vnet.o `test -f 'net/skyeye_net_vnet.c' || echo '$(srcdir)/'`net/skyeye_net_vnet.c

skyeye_net_vnet.obj: net/skyeye_net_vnet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_net_vnet.obj -MD -MP -MF $(DEPDIR)/skyeye_net_vnet.Tpo -c -o skyeye_net_vnet.obj `if test -f 'net/skyeye_net_vnet.c'; then $(CYGPATH_W) 'net/skyeye_net_vnet.c'; else $(CYGPATH_W) '$(srcdir)/net/skyeye_net_vnet.c'; fi`
	mv -f $(DEPDIR)/skyeye_net_vnet.Tpo $(DEPDIR)/skyeye_net_vnet.Po
#	source='net/skyeye_net_vnet.c' object='skyeye_net_vnet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_net_vnet.obj `if test -f 'net/skyeye_net_vnet.c'; then $(CYGPATH_W) 'net/skyeye_net_vnet.c'; else $(CYGPATH_W) '$(srcdir)/net/skyeye_net_vnet.c'; fi`

dev_touchscreen_skyeye.o: touchscreen/dev_touchscreen_skyeye.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_touchscreen_skyeye.o -MD -MP -MF $(DEPDIR)/dev_touchscreen_skyeye.Tpo -c -o dev_touchscreen_skyeye.o `test -f 'touchscreen/dev_touchscreen_skyeye.c' || echo '$(srcdir)/'`touchscreen/dev_touchscreen_skyeye.c
	mv -f $(DEPDIR)/dev_touchscreen_skyeye.Tpo $(DEPDIR)/dev_touchscreen_skyeye.Po
#	source='touchscreen/dev_touchscreen_skyeye.c' object='dev_touchscreen_skyeye.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_touchscreen_skyeye.o `test -f 'touchscreen/dev_touchscreen_skyeye.c' || echo '$(srcdir)/'`touchscreen/dev_touchscreen_skyeye.c

dev_touchscreen_skyeye.obj: touchscreen/dev_touchscreen_skyeye.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_touchscreen_skyeye.obj -MD -MP -MF $(DEPDIR)/dev_touchscreen_skyeye.Tpo -c -o dev_touchscreen_skyeye.obj `if test -f 'touchscreen/dev_touchscreen_skyeye.c'; then $(CYGPATH_W) 'touchscreen/dev_touchscreen_skyeye.c'; else $(CYGPATH_W) '$(srcdir)/touchscreen/dev_touchscreen_skyeye.c'; fi`
	mv -f $(DEPDIR)/dev_touchscreen_skyeye.Tpo $(DEPDIR)/dev_touchscreen_skyeye.Po
#	source='touchscreen/dev_touchscreen_skyeye.c' object='dev_touchscreen_skyeye.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_touchscreen_skyeye.obj `if test -f 'touchscreen/dev_touchscreen_skyeye.c'; then $(CYGPATH_W) 'touchscreen/dev_touchscreen_skyeye.c'; else $(CYGPATH_W) '$(srcdir)/touchscreen/dev_touchscreen_skyeye.c'; fi`

skyeye_touchscreen.o: touchscreen/skyeye_touchscreen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_touchscreen.o -MD -MP -MF $(DEPDIR)/skyeye_touchscreen.Tpo -c -o skyeye_touchscreen.o `test -f 'touchscreen/skyeye_touchscreen.c' || echo '$(srcdir)/'`touchscreen/skyeye_touchscreen.c
	mv -f $(DEPDIR)/skyeye_touchscreen.Tpo $(DEPDIR)/skyeye_touchscreen.Po
#	source='touchscreen/skyeye_touchscreen.c' object='skyeye_touchscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_touchscreen.o `test -f 'touchscreen/skyeye_touchscreen.c' || echo '$(srcdir)/'`touchscreen/skyeye_touchscreen.c

skyeye_touchscreen.obj: touchscreen/skyeye_touchscreen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_touchscreen.obj -MD -MP -MF $(DEPDIR)/skyeye_touchscreen.Tpo -c -o skyeye_touchscreen.obj `if test -f 'touchscreen/skyeye_touchscreen.c'; then $(CYGPATH_W) 'touchscreen/skyeye_touchscreen.c'; else $(CYGPATH_W) '$(srcdir)/touchscreen/skyeye_touchscreen.c'; fi`
	mv -f $(DEPDIR)/skyeye_touchscreen.Tpo $(DEPDIR)/skyeye_touchscreen.Po
#	source='touchscreen/skyeye_touchscreen.c' object='skyeye_touchscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_touchscreen.obj `if test -f 'touchscreen/skyeye_touchscreen.c'; then $(CYGPATH_W) 'touchscreen/skyeye_touchscreen.c'; else $(CYGPATH_W) '$(srcdir)/touchscreen/skyeye_touchscreen.c'; fi`

dev_lcd_au1100.o: lcd/dev_lcd_au1100.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_au1100.o -MD -MP -MF $(DEPDIR)/dev_lcd_au1100.Tpo -c -o dev_lcd_au1100.o `test -f 'lcd/dev_lcd_au1100.c' || echo '$(srcdir)/'`lcd/dev_lcd_au1100.c
	mv -f $(DEPDIR)/dev_lcd_au1100.Tpo $(DEPDIR)/dev_lcd_au1100.Po
#	source='lcd/dev_lcd_au1100.c' object='dev_lcd_au1100.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_au1100.o `test -f 'lcd/dev_lcd_au1100.c' || echo '$(srcdir)/'`lcd/dev_lcd_au1100.c

dev_lcd_au1100.obj: lcd/dev_lcd_au1100.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_au1100.obj -MD -MP -MF $(DEPDIR)/dev_lcd_au1100.Tpo -c -o dev_lcd_au1100.obj `if test -f 'lcd/dev_lcd_au1100.c'; then $(CYGPATH_W) 'lcd/dev_lcd_au1100.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_au1100.c'; fi`
	mv -f $(DEPDIR)/dev_lcd_au1100.Tpo $(DEPDIR)/dev_lcd_au1100.Po
#	source='lcd/dev_lcd_au1100.c' object='dev_lcd_au1100.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_au1100.obj `if test -f 'lcd/dev_lcd_au1100.c'; then $(CYGPATH_W) 'lcd/dev_lcd_au1100.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_au1100.c'; fi`

dev_lcd_s3c2410.o: lcd/dev_lcd_s3c2410.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_s3c2410.o -MD -MP -MF $(DEPDIR)/dev_lcd_s3c2410.Tpo -c -o dev_lcd_s3c2410.o `test -f 'lcd/dev_lcd_s3c2410.c' || echo '$(srcdir)/'`lcd/dev_lcd_s3c2410.c
	mv -f $(DEPDIR)/dev_lcd_s3c2410.Tpo $(DEPDIR)/dev_lcd_s3c2410.Po
#	source='lcd/dev_lcd_s3c2410.c' object='dev_lcd_s3c2410.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_s3c2410.o `test -f 'lcd/dev_lcd_s3c2410.c' || echo '$(srcdir)/'`lcd/dev_lcd_s3c2410.c

dev_lcd_s3c2410.obj: lcd/dev_lcd_s3c2410.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_s3c2410.obj -MD -MP -MF $(DEPDIR)/dev_lcd_s3c2410.Tpo -c -o dev_lcd_s3c2410.obj `if test -f 'lcd/dev_lcd_s3c2410.c'; then $(CYGPATH_W) 'lcd/dev_lcd_s3c2410.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_s3c2410.c'; fi`
	mv -f $(DEPDIR)/dev_lcd_s3c2410.Tpo $(DEPDIR)/dev_lcd_s3c2410.Po
#	source='lcd/dev_lcd_s3c2410.c' object='dev_lcd_s3c2410.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_s3c2410.obj `if test -f 'lcd/dev_lcd_s3c2410.c'; then $(CYGPATH_W) 'lcd/dev_lcd_s3c2410.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_s3c2410.c'; fi`

skyeye_lcd.o: lcd/skyeye_lcd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_lcd.o -MD -MP -MF $(DEPDIR)/skyeye_lcd.Tpo -c -o skyeye_lcd.o `test -f 'lcd/skyeye_lcd.c' || echo '$(srcdir)/'`lcd/skyeye_lcd.c
	mv -f $(DEPDIR)/skyeye_lcd.Tpo $(DEPDIR)/skyeye_lcd.Po
#	source='lcd/skyeye_lcd.c' object='skyeye_lcd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_lcd.o `test -f 'lcd/skyeye_lcd.c' || echo '$(srcdir)/'`lcd/skyeye_lcd.c

skyeye_lcd.obj: lcd/skyeye_lcd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_lcd.obj -MD -MP -MF $(DEPDIR)/skyeye_lcd.Tpo -c -o skyeye_lcd.obj `if test -f 'lcd/skyeye_lcd.c'; then $(CYGPATH_W) 'lcd/skyeye_lcd.c'; else $(CYGPATH_W) '$(srcdir)/lcd/skyeye_lcd.c'; fi`
	mv -f $(DEPDIR)/skyeye_lcd.Tpo $(DEPDIR)/skyeye_lcd.Po
#	source='lcd/skyeye_lcd.c' object='skyeye_lcd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_lcd.obj `if test -f 'lcd/skyeye_lcd.c'; then $(CYGPATH_W) 'lcd/skyeye_lcd.c'; else $(CYGPATH_W) '$(srcdir)/lcd/skyeye_lcd.c'; fi`

dev_lcd_ep7312.o: lcd/dev_lcd_ep7312.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_ep7312.o -MD -MP -MF $(DEPDIR)/dev_lcd_ep7312.Tpo -c -o dev_lcd_ep7312.o `test -f 'lcd/dev_lcd_ep7312.c' || echo '$(srcdir)/'`lcd/dev_lcd_ep7312.c
	mv -f $(DEPDIR)/dev_lcd_ep7312.Tpo $(DEPDIR)/dev_lcd_ep7312.Po
#	source='lcd/dev_lcd_ep7312.c' object='dev_lcd_ep7312.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_ep7312.o `test -f 'lcd/dev_lcd_ep7312.c' || echo '$(srcdir)/'`lcd/dev_lcd_ep7312.c

dev_lcd_ep7312.obj: lcd/dev_lcd_ep7312.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_ep7312.obj -MD -MP -MF $(DEPDIR)/dev_lcd_ep7312.Tpo -c -o dev_lcd_ep7312.obj `if test -f 'lcd/dev_lcd_ep7312.c'; then $(CYGPATH_W) 'lcd/dev_lcd_ep7312.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_ep7312.c'; fi`
	mv -f $(DEPDIR)/dev_lcd_ep7312.Tpo $(DEPDIR)/dev_lcd_ep7312.Po
#	source='lcd/dev_lcd_ep7312.c' object='dev_lcd_ep7312.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_ep7312.obj `if test -f 'lcd/dev_lcd_ep7312.c'; then $(CYGPATH_W) 'lcd/dev_lcd_ep7312.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_ep7312.c'; fi`

dev_lcd_s3c44b0x.o: lcd/dev_lcd_s3c44b0x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_s3c44b0x.o -MD -MP -MF $(DEPDIR)/dev_lcd_s3c44b0x.Tpo -c -o dev_lcd_s3c44b0x.o `test -f 'lcd/dev_lcd_s3c44b0x.c' || echo '$(srcdir)/'`lcd/dev_lcd_s3c44b0x.c
	mv -f $(DEPDIR)/dev_lcd_s3c44b0x.Tpo $(DEPDIR)/dev_lcd_s3c44b0x.Po
#	source='lcd/dev_lcd_s3c44b0x.c' object='dev_lcd_s3c44b0x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_s3c44b0x.o `test -f 'lcd/dev_lcd_s3c44b0x.c' || echo '$(srcdir)/'`lcd/dev_lcd_s3c44b0x.c

dev_lcd_s3c44b0x.obj: lcd/dev_lcd_s3c44b0x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_s3c44b0x.obj -MD -MP -MF $(DEPDIR)/dev_lcd_s3c44b0x.Tpo -c -o dev_lcd_s3c44b0x.obj `if test -f 'lcd/dev_lcd_s3c44b0x.c'; then $(CYGPATH_W) 'lcd/dev_lcd_s3c44b0x.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_s3c44b0x.c'; fi`
	mv -f $(DEPDIR)/dev_lcd_s3c44b0x.Tpo $(DEPDIR)/dev_lcd_s3c44b0x.Po
#	source='lcd/dev_lcd_s3c44b0x.c' object='dev_lcd_s3c44b0x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_s3c44b0x.obj `if test -f 'lcd/dev_lcd_s3c44b0x.c'; then $(CYGPATH_W) 'lcd/dev_lcd_s3c44b0x.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_s3c44b0x.c'; fi`

dev_lcd_pxa.o: lcd/dev_lcd_pxa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_pxa.o -MD -MP -MF $(DEPDIR)/dev_lcd_pxa.Tpo -c -o dev_lcd_pxa.o `test -f 'lcd/dev_lcd_pxa.c' || echo '$(srcdir)/'`lcd/dev_lcd_pxa.c
	mv -f $(DEPDIR)/dev_lcd_pxa.Tpo $(DEPDIR)/dev_lcd_pxa.Po
#	source='lcd/dev_lcd_pxa.c' object='dev_lcd_pxa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_pxa.o `test -f 'lcd/dev_lcd_pxa.c' || echo '$(srcdir)/'`lcd/dev_lcd_pxa.c

dev_lcd_pxa.obj: lcd/dev_lcd_pxa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dev_lcd_pxa.obj -MD -MP -MF $(DEPDIR)/dev_lcd_pxa.Tpo -c -o dev_lcd_pxa.obj `if test -f 'lcd/dev_lcd_pxa.c'; then $(CYGPATH_W) 'lcd/dev_lcd_pxa.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_pxa.c'; fi`
	mv -f $(DEPDIR)/dev_lcd_pxa.Tpo $(DEPDIR)/dev_lcd_pxa.Po
#	source='lcd/dev_lcd_pxa.c' object='dev_lcd_pxa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dev_lcd_pxa.obj `if test -f 'lcd/dev_lcd_pxa.c'; then $(CYGPATH_W) 'lcd/dev_lcd_pxa.c'; else $(CYGPATH_W) '$(srcdir)/lcd/dev_lcd_pxa.c'; fi`

skyeye_lcd_gtk.o: lcd/skyeye_lcd_gtk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_lcd_gtk.o -MD -MP -MF $(DEPDIR)/skyeye_lcd_gtk.Tpo -c -o skyeye_lcd_gtk.o `test -f 'lcd/skyeye_lcd_gtk.c' || echo '$(srcdir)/'`lcd/skyeye_lcd_gtk.c
	mv -f $(DEPDIR)/skyeye_lcd_gtk.Tpo $(DEPDIR)/skyeye_lcd_gtk.Po
#	source='lcd/skyeye_lcd_gtk.c' object='skyeye_lcd_gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_lcd_gtk.o `test -f 'lcd/skyeye_lcd_gtk.c' || echo '$(srcdir)/'`lcd/skyeye_lcd_gtk.c

skyeye_lcd_gtk.obj: lcd/skyeye_lcd_gtk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_lcd_gtk.obj -MD -MP -MF $(DEPDIR)/skyeye_lcd_gtk.Tpo -c -o skyeye_lcd_gtk.obj `if test -f 'lcd/skyeye_lcd_gtk.c'; then $(CYGPATH_W) 'lcd/skyeye_lcd_gtk.c'; else $(CYGPATH_W) '$(srcdir)/lcd/skyeye_lcd_gtk.c'; fi`
	mv -f $(DEPDIR)/skyeye_lcd_gtk.Tpo $(DEPDIR)/skyeye_lcd_gtk.Po
#	source='lcd/skyeye_lcd_gtk.c' object='skyeye_lcd_gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_lcd_gtk.obj `if test -f 'lcd/skyeye_lcd_gtk.c'; then $(CYGPATH_W) 'lcd/skyeye_lcd_gtk.c'; else $(CYGPATH_W) '$(srcdir)/lcd/skyeye_lcd_gtk.c'; fi`

skyeye_lcd_win32.o: lcd/skyeye_lcd_win32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_lcd_win32.o -MD -MP -MF $(DEPDIR)/skyeye_lcd_win32.Tpo -c -o skyeye_lcd_win32.o `test -f 'lcd/skyeye_lcd_win32.c' || echo '$(srcdir)/'`lcd/skyeye_lcd_win32.c
	mv -f $(DEPDIR)/skyeye_lcd_win32.Tpo $(DEPDIR)/skyeye_lcd_win32.Po
#	source='lcd/skyeye_lcd_win32.c' object='skyeye_lcd_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_lcd_win32.o `test -f 'lcd/skyeye_lcd_win32.c' || echo '$(srcdir)/'`lcd/skyeye_lcd_win32.c

skyeye_lcd_win32.obj: lcd/skyeye_lcd_win32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT skyeye_lcd_win32.obj -MD -MP -MF $(DEPDIR)/skyeye_lcd_win32.Tpo -c -o skyeye_lcd_win32.obj `if test -f 'lcd/skyeye_lcd_win32.c'; then $(CYGPATH_W) 'lcd/skyeye_lcd_win32.c'; else $(CYGPATH_W) '$(srcdir)/lcd/skyeye_lcd_win32.c'; fi`
	mv -f $(DEPDIR)/skyeye_lcd_win32.Tpo $(DEPDIR)/skyeye_lcd_win32.Po
#	source='lcd/skyeye_lcd_win32.c' object='skyeye_lcd_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o skyeye_lcd_win32.obj `if test -f 'lcd/skyeye_lcd_win32.c'; then $(CYGPATH_W) 'lcd/skyeye_lcd_win32.c'; else $(CYGPATH_W) '$(srcdir)/lcd/skyeye_lcd_win32.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
